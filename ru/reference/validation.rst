Валидация
---------
Компонент Phalcon\Validation реализует независимую возможность проверки произвольного набора данных.
Компонет можно использовать для проверки данных не относящихся к моделям или коллекциям.

Ниже показан пример использования компонента:

.. code-block:: php

	use Phalcon\Validation\Validator\PresenceOf,
		Phalcon\Validation\Validator\Email;

	$validation = new Phalcon\Validation();

	$validation->add('name', new PresenceOf(
		'message' => 'The name is required'
	));

	$validation->add('email', new PresenceOf(
		'message' => 'The e-mail is required'
	));

	$validation->add('email', new Email(
		'message' => 'The e-mail is not valid'
	));

	$messages = $validation->validate($_POST);
	if (count($messages)) {
		foreach ($messages as $message) {
			echo $message, '<br>;
		}
	}

Валидаторы
----------
Базовый компонент валидации Phalcon предоставляет следующие правила проверки:

+--------------+-----------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| Название     | Описание                                                                                                                                | Пример                                                            |
+==============+=========================================================================================================================================+===================================================================+
| PresenceOf   | Проверяет, что значение поля не равно null или пустой строке.                                                                           | :doc:`Example <../api/Phalcon_Validation_Validator_PresenceOf>`   |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| Email        | Проверяет сответствие email формату                                                                                                     | :doc:`Example <../api/Phalcon_Validation_Validator_Email>`        |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| ExclusionIn  | Проверяет, что значение не входит в список возможных значений                                                                           | :doc:`Example <../api/Phalcon_Validation_Validator_Exclusionin>`  |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| InclusionIn  | Проверяет, что значение находится в списке возможных значений                                                                           | :doc:`Example <../api/Phalcon_Validation_Validator_Inclusionin>`  |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| Regex        | Проверяет, что значение поля соответствует регулярному выражению                                                                        | :doc:`Example <../api/Phalcon_Validation_Validator_Regex>`        |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+
| StringLength | Проверяет длину строки                                                                                                                  | :doc:`Example <../api/Phalcon_Validation_Validator_StringLength>` |
+--------------+-----------------------------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------------+

Дополнительные проверки могут быть реализованы самостоятельно. Следующий класс, объясняет, как создать правило валидации для этого компонента:

.. code-block:: php
???


